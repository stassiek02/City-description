{"version":3,"sources":["Components/AutoComplete/AutoComplete.js","Components/Accordion/Accordion.js","theme/GlobalStyle.js","App.js","index.js"],"names":["StyledUl","styled","ul","_templateObject","StyledSuggestionList","li","_templateObject2","StyledInput","input","_templateObject3","AutoComplete","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","e","setState","activeSuggestion","filteredSuggestions","showSuggestions","userInput","currentTarget","innerText","afterSubmit","state","onChange","suggestions","value","filter","suggestion","toLowerCase","indexOf","inherits","createClass","key","suggestionsListComponent","onKeyDown","_this$state","react_default","a","createElement","map","index","Fragment","type","placeholder","Component","defaultProperty","AccordionSection","div","Accordion_templateObject","AccordionItem","button","Accordion_templateObject2","_ref","setActive","_ref2","AccordionTitle","p","Accordion_templateObject3","AccordionContent","_templateObject4","AccordionContentText","_templateObject5","Accordion","_useState","useState","_useState2","slicedToArray","setActiveState","_useState3","_useState4","setHeight","setHeightState","content","useRef","concat","current","scrollHeight","title","ref","style","maxHeight","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","countrySuggestion","Spain","Poland","Germany","France","StyledWrapper","App_templateObject","StyledInnerWrapper","App_templateObject2","App","cities","country","getInputData","bind","assertThisInitialized","array","_this2","unique","toConsumableArray","Set","item","city","split","slice","getWikiData","_this3","getData","fetch","then","res","json","_this4","filterCities","results","catch","error","console","desc","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","abrupt","extract","stop","_x2","apply","arguments","Promise","all","_this5","_this6","Cities","theme_GlobalStyle","Components_AutoComplete_AutoComplete","Accordion_Accordion","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2f7a4a68.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  margin-top: -10px;\r\n  padding: 0;\r\n`;\r\nconst StyledSuggestionList = styled.li`\r\n  width: 200px;\r\n  padding: 10px 15px;\r\n  background-color: #f2f2f2;\r\n  transition: 0.2s background-color;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    background-color: #16a085;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst StyledInput = styled.input`\r\n  border: 2px solid #16a085;\r\n  font-size: 1.6rem;\r\n  margin: 0;\r\n  padding: 20px;\r\n  width: 200px;\r\n  height: 20px;\r\n  margin-bottom: 10px;\r\n\r\n  & ~ ul {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport class AutoComplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProperty = {\r\n    suggestions: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\"\r\n    };\r\n  }\r\n  onClick = e => {\r\n    this.setState(\r\n      {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: e.currentTarget.innerText\r\n      },\r\n      () => this.props.afterSubmit(this.state.userInput, e)\r\n    );\r\n  };\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: { filteredSuggestions, showSuggestions, userInput }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n    if (showSuggestions && userInput) {\r\n      suggestionsListComponent = (\r\n        <StyledUl>\r\n          {filteredSuggestions.map((suggestion, index) => (\r\n            <StyledSuggestionList key={index} onClick={onClick}>\r\n              {suggestion}\r\n            </StyledSuggestionList>\r\n          ))}\r\n        </StyledUl>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <StyledInput\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={userInput}\r\n          placeholder=\"Write your country\"\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        {suggestionsListComponent}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoComplete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AccordionSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst AccordionItem = styled.button`\r\n  background-color: ${({ setActive }) =>\r\n    setActive === \"active\" ? \"#27ae60\" : \"#2ecc71\"};\r\n  color: #ecf0f1;\r\n  cursor: pointer;\r\n  padding: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  border:0;\r\n  border-bottom:1px solid white;\r\n  outline: none;\r\n  transform: translateX(\r\n    ${({ setActive }) => (setActive === \"active\" ? \"20px\" : \"0\")}\r\n  );\r\n  transition: background-color 0.6s ease, transform 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #1abc9c;\r\n  }\r\n  &:focus {\r\n    border: 1px solid #ccc;\r\n    transform: translateX(20px);\r\n  }\r\n`;\r\nconst AccordionTitle = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 1.7rem;\r\n`;\r\nconst AccordionContent = styled.div`\r\n  background-color: white;\r\n  overflow: hidden;\r\n  transition: max-height 0.6s ease;\r\n  \r\n`;\r\nconst AccordionContentText = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  padding: 18px;\r\n  margin-left:20px;\r\n`;\r\n\r\nfunction Accordion(props) {\r\n  const [setActive, setActiveState] = useState(\"\");\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n\r\n  const content = useRef(null);\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AccordionSection>\r\n      <AccordionItem onClick={toggleAccordion} setActive={setActive}>\r\n        <AccordionTitle>{props.title}</AccordionTitle>\r\n      </AccordionItem>\r\n      <AccordionContent ref={content} style={{ maxHeight: `${setHeight}` }}>\r\n        <AccordionContentText> {props.content}</AccordionContentText>\r\n      </AccordionContent>\r\n    </AccordionSection>\r\n  );\r\n}\r\n\r\nexport default Accordion;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\r\n  \r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AutoComplete from \"./Components/AutoComplete/AutoComplete\";\nimport Accordion from \"Components/Accordion/Accordion\";\nimport GlobalStyle from \"theme/GlobalStyle\";\n\nconst cors = \"https://cors-anywhere.herokuapp.com/\";\nconst cityApi =\n  \"https://api.openaq.org/v1/measurements?limit=200&parameter=pm25&order_by=value&sort=desc&country=\";\n\nconst countrySuggestion = {\n  Spain: \"ES\",\n  Poland: \"PL\",\n  Germany: \"DE\",\n  France: \"FR\"\n};\nconst StyledWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledInnerWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n \n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getInputData = this.getInputData.bind(this);\n  }\n  state = {\n    cities: [],\n    country: \"\"\n  };\n\n  filterCities(array) {\n    let unique = [...new Set(array.map(item => item.city.split(\"/\")[0]))].slice(\n      0,\n      10\n    );\n\n    this.setState(\n      {\n        cities: unique\n      },\n      () => this.getWikiData(this.state)\n    );\n  }\n\n  getInputData(state) {\n    this.setState(\n      {\n        country: state\n      },\n      () => this.getData()\n    );\n  }\n\n  async getData() {\n    await fetch(cityApi + countrySuggestion[this.state.country])\n      .then(res => res.json())\n      .then(json => this.filterCities(json.results))\n      .catch(error => console.error(\"Error:\", error));\n  }\n  async getWikiData(state) {\n    const desc = state.cities.map(async item => {\n      return fetch(\n        `${cors}https://en.wikipedia.org/api/rest_v1/page/summary/${item}`\n      )\n        .then(res => res.json())\n        .then(res => res.extract)\n        .catch(error => console.error(\"Error:\", error));\n    });\n\n    Promise.all(desc).then(res =>\n      this.setState({\n        desc: res\n      })\n    );\n  }\n\n  render() {\n    const Cities = this.state.cities;\n    return (\n      <>\n        <GlobalStyle />\n        <StyledWrapper>\n          <StyledInnerWrapper>\n            <AutoComplete\n              suggestions={[\"Spain\", \"Poland\", \"Germany\", \"France\"]}\n              afterSubmit={this.getInputData}\n            />\n          </StyledInnerWrapper>\n          <StyledInnerWrapper>\n            {this.state.desc\n              ? Cities.map((item, index) => (\n                  <Accordion\n                    title={item}\n                    content={this.state.desc[index]}\n                    key={index}\n                  />\n                ))\n              : null}\n          </StyledInnerWrapper>\n        </StyledWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}