{"version":3,"sources":["Components/AutoComplete/AutoComplete.js","Components/Accordion/Accordion.js","theme/GlobalStyle.js","App.js","index.js"],"names":["StyledUl","styled","ul","_templateObject","StyledSuggestionList","li","_templateObject2","StyledInput","input","_templateObject3","AutoComplete","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","activeSuggestion","filteredSuggestions","showSuggestions","userInput","onSuggestionClick","e","setState","currentTarget","innerText","props","afterSubmit","ls","set","onChange","suggestions","value","filter","suggestion","toLowerCase","indexOf","inherits","createClass","key","get","suggestionsListComponent","onKeyDown","_this$state","react_default","a","createElement","map","index","onClick","Fragment","type","placeholder","autocomplete","Component","defaultProperty","AccordionSection","div","Accordion_templateObject","AccordionItem","button","Accordion_templateObject2","_ref","setActive","_ref2","AccordionTitle","p","Accordion_templateObject3","_ref3","theme","bold","AccordionContent","_templateObject4","AccordionContentText","_templateObject5","Accordion","_useState","useState","_useState2","slicedToArray","setActiveState","_useState3","_useState4","setHeight","setHeightState","content","useRef","current","scrollHeight","title","ref","style","maxHeight","defaultProps","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","countrySuggestion","Spain","Poland","Germany","France","StyledWrapper","App_templateObject","StyledInnerWrapper","App_templateObject2","App","cities","country","isLoading","getUserInput","bind","assertThisInitialized","lastSearch","array","_this2","unique","toConsumableArray","Set","item","city","split","slice","getWikiDescription","_this3","getCities","fetch","then","res","json","_this4","filterCities","results","catch","error","console","desc","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","abrupt","extract","stop","_x2","Promise","all","_this5","_this6","Cities","Accordion_Accordion","theme_GlobalStyle","Components_AutoComplete_AutoComplete","rednerList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd1566fb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport ls from \"local-storage\";\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  margin-top: -10px;\r\n  padding: 0;\r\n`;\r\nconst StyledSuggestionList = styled.li`\r\n  width: 200px;\r\n  padding: 10px 15px;\r\n  background-color: #f2f2f2;\r\n  transition: 0.2s background-color;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    background-color: #16a085;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst StyledInput = styled.input`\r\n  border: 2px solid #16a085;\r\n  font-size: 1.7rem;\r\n  margin: 0;\r\n  padding: 20px;\r\n  width: 200px;\r\n  height: 20px;\r\n  margin-bottom: 10px;\r\n  font-weight: 500;\r\n  & ~ ul {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport class AutoComplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProperty = {\r\n    suggestions: []\r\n  };\r\n  \r\n  state = {\r\n    activeSuggestion: 0,\r\n    filteredSuggestions: [],\r\n    showSuggestions: false,\r\n    userInput: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      userInput: ls.get(\"LastSearch\") || \"\"\r\n    });\r\n  }\r\n  onSuggestionClick = e => {\r\n    this.setState(\r\n      {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: e.currentTarget.innerText\r\n      },\r\n      () => this.props.afterSubmit(this.state.userInput, e)\r\n    );\r\n    ls.set(\"LastSearch\", e.currentTarget.innerText);\r\n  };\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onSuggestionClick,\r\n      onKeyDown,\r\n      state: { filteredSuggestions, showSuggestions, userInput }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n    if (showSuggestions && userInput) {\r\n      suggestionsListComponent = (\r\n        <StyledUl>\r\n          {filteredSuggestions.map((suggestion, index) => (\r\n            <StyledSuggestionList key={index} onClick={onSuggestionClick}>\r\n              {suggestion}\r\n            </StyledSuggestionList>\r\n          ))}\r\n        </StyledUl>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <StyledInput\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={userInput}\r\n          placeholder=\"Write your country\"\r\n          onKeyDown={onKeyDown}\r\n          autocomplete=\"off\"\r\n        />\r\n\r\n        {suggestionsListComponent}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoComplete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AccordionSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst AccordionItem = styled.button`\r\n  background-color: ${({ setActive}) =>\r\n    setActive === \"active\" ? \"#27ae60\" : \"#2ecc71\"};\r\n  color: #ecf0f1;\r\n  cursor: pointer;\r\n  padding: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  border:0;\r\n  border-bottom:1px solid white;\r\n  outline: none;\r\n  transform: translateX(\r\n    ${({ setActive }) => (setActive === \"active\" ? \"20px\" : \"0\")}\r\n  );\r\n  transition: background-color 0.4s ease, transform 0.6s ease;\r\n  &:hover {\r\n    background-color: #1abc9c;\r\n  }\r\n  \r\n`;\r\nconst AccordionTitle = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: ${({theme})=>theme.bold};\r\n  font-size: 1.8rem;\r\n`;\r\nconst AccordionContent = styled.div`\r\n  background-color: white;\r\n  overflow: hidden;\r\n  transition: max-height 0.6s ease;\r\n  \r\n`;\r\nconst AccordionContentText = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  padding: 18px;\r\n  margin-left:20px;\r\n`;\r\n\r\nfunction Accordion(props) {\r\n  const [setActive, setActiveState] = useState(\"\");\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n\r\n  const content = useRef(null);\r\n  \r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    );\r\n  }\r\n\r\n  \r\n  return (\r\n    <AccordionSection>\r\n      <AccordionItem onClick={toggleAccordion} setActive={setActive}>\r\n        <AccordionTitle>{props.title}</AccordionTitle>\r\n      </AccordionItem>\r\n      <AccordionContent ref={content} style={{ maxHeight: `${setHeight}` }}>\r\n        <AccordionContentText> {props.content}</AccordionContentText>\r\n      </AccordionContent>\r\n    </AccordionSection>\r\n  );\r\n}\r\nAccordion.propTypes ={\r\n  title:PropTypes.string.isRequired,\r\n  content:PropTypes.string.isRequired,\r\n}\r\nAccordion.defaultProps = {\r\n  title: \"\",\r\n  content:\"\",\r\n};\r\n\r\nexport default Accordion;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600,500');\r\n  \r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { Component} from \"react\";\nimport styled from \"styled-components\";\nimport AutoComplete from \"./Components/AutoComplete/AutoComplete\";\nimport Accordion from \"Components/Accordion/Accordion\";\nimport GlobalStyle from \"theme/GlobalStyle\";\nimport ls from \"local-storage\";\n\nconst cors = \"https://cors-anywhere.herokuapp.com/\";\nconst cityApi =\n  \"https://api.openaq.org/v1/measurements?limit=40&parameter=pm25&order_by=value&sort=desc&country=\";\n\nconst countrySuggestion = {\n  Spain: \"ES\",\n  Poland: \"PL\",\n  Germany: \"DE\",\n  France: \"FR\"\n};\nconst StyledWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledInnerWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n`;\n\nclass App extends Component {\n  state = {\n    cities: [],\n    country: \"\",\n    isLoading: false,\n  };\n  componentDidMount() {\n    const lastSearch = ls.get(\"LastSearch\");\n    if (lastSearch) {\n      this.getUserInput(lastSearch);\n    }\n  }\n\n  getUserInput = this.getUserInput.bind(this);\n\n  filterCities(array) {\n    let unique = [...new Set(array.map(item => item.city.split(\"/\")[0]))].slice(\n      0,\n      10\n    );\n\n    this.setState(\n      {\n        cities: unique\n      },\n      () => this.getWikiDescription(this.state)\n    );\n  }\n\n  getUserInput(state) {\n    this.setState(\n      {\n        country: state,\n        isLoading:true,\n      },\n      () => this.getCities()\n    );\n  }\n\n  async getCities() {\n    await fetch(cityApi + countrySuggestion[this.state.country])\n      .then(res => res.json())\n      .then(json => this.filterCities(json.results))\n      .catch(error => console.error(\"Error:\", error));\n  }\n  async getWikiDescription(state) {\n    this.setState({\n      isLoading: true,\n    });\n    const desc = state.cities.map(async item => {\n      return fetch(\n        `${cors}https://en.wikipedia.org/api/rest_v1/page/summary/${item}`\n      )\n        .then(res => res.json())\n        .then(res => res.extract)\n        .catch(error => console.error(\"Error:\", error));\n    });\n\n    Promise.all(desc).then(res =>\n      this.setState({\n        desc: res,\n        isLoading: false,\n      })\n    );\n  }\n\n  rednerList() {\n    const { desc, isLoading } = this.state;\n    const Cities = this.state.cities;\n    if (desc && !isLoading) {\n      return Cities.map((item, index) => (\n        <Accordion title={item} content={this.state.desc[index]} key={index} />\n      ));\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        <GlobalStyle />\n        <StyledWrapper>\n          <StyledInnerWrapper>\n            <AutoComplete\n              suggestions={[\"Spain\", \"Poland\", \"Germany\", \"France\"]}\n              afterSubmit={this.getUserInput}\n            />\n          </StyledInnerWrapper>\n          <StyledInnerWrapper>\n            {!isLoading  ? this.rednerList() : <span>Loading</span>}\n            \n          </StyledInnerWrapper>\n        </StyledWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}