{"version":3,"sources":["Components/AutoComplete/AutoComplete.js","Components/Accordion/Accordion.js","theme/GlobalStyle.js","App.js","index.js"],"names":["StyledUl","styled","ul","_templateObject","StyledSuggestionList","li","_templateObject2","StyledInput","input","_templateObject3","AutoComplete","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","e","setState","activeSuggestion","filteredSuggestions","showSuggestions","userInput","currentTarget","innerText","afterSubmit","state","console","log","ls","set","onChange","suggestions","value","filter","suggestion","toLowerCase","indexOf","inherits","createClass","key","get","suggestionsListComponent","onKeyDown","_this$state","react_default","a","createElement","map","index","Fragment","type","placeholder","autocomplete","Component","defaultProperty","AccordionSection","div","Accordion_templateObject","AccordionItem","button","Accordion_templateObject2","_ref","setActive","_ref2","AccordionTitle","p","Accordion_templateObject3","AccordionContent","_templateObject4","AccordionContentText","_templateObject5","Accordion","_useState","useState","_useState2","slicedToArray","setActiveState","_useState3","_useState4","setHeight","setHeightState","content","useRef","concat","current","scrollHeight","title","ref","style","maxHeight","defaultProps","GlobalStyle","createGlobalStyle","GlobalStyle_templateObject","countrySuggestion","Spain","Poland","Germany","France","StyledWrapper","App_templateObject","StyledInnerWrapper","App_templateObject2","App","cities","country","getInputData","bind","assertThisInitialized","array","_this2","unique","toConsumableArray","Set","item","city","split","slice","getWikiData","_this3","getData","fetch","then","res","json","_this4","filterCities","results","catch","error","desc","asyncToGenerator","regenerator_default","mark","_callee2","wrap","_context2","prev","next","abrupt","extract","stop","_x2","apply","arguments","Promise","all","_this5","_this6","Cities","theme_GlobalStyle","Components_AutoComplete_AutoComplete","Accordion_Accordion","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b580ff63.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport ls from 'local-storage'\r\n\r\nconst StyledUl = styled.ul`\r\n  list-style: none;\r\n  margin-top: -10px;\r\n  padding: 0;\r\n`;\r\nconst StyledSuggestionList = styled.li`\r\n  width: 200px;\r\n  padding: 10px 15px;\r\n  background-color: #f2f2f2;\r\n  transition: 0.2s background-color;\r\n\r\n  &:focus,\r\n  &:hover {\r\n    background-color: #16a085;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\nconst StyledInput = styled.input`\r\n  border: 2px solid #16a085;\r\n  font-size: 1.7rem;\r\n  margin: 0;\r\n  padding: 20px;\r\n  width: 200px;\r\n  height: 20px;\r\n  margin-bottom: 10px;\r\n  font-weight:500;\r\n  & ~ ul {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport class AutoComplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array)\r\n  };\r\n\r\n  static defaultProperty = {\r\n    suggestions: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      userInput:ls.get('LastSearch') || '',\r\n    })\r\n  }\r\n  onClick = e => {\r\n    this.setState(\r\n      {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: e.currentTarget.innerText\r\n      },\r\n      () => this.props.afterSubmit(this.state.userInput, e)\r\n    );\r\n    console.log(e.currentTarget.innerText);\r\n    ls.set('LastSearch',e.currentTarget.innerText);\r\n  };\r\n\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      state: { filteredSuggestions, showSuggestions, userInput }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n    if (showSuggestions && userInput) {\r\n      suggestionsListComponent = (\r\n        <StyledUl>\r\n          {filteredSuggestions.map((suggestion, index) => (\r\n            <StyledSuggestionList key={index} onClick={onClick}>\r\n              {suggestion}\r\n            </StyledSuggestionList>\r\n          ))}\r\n        </StyledUl>\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        <StyledInput\r\n          type=\"text\"\r\n          onChange={onChange}\r\n          value={userInput}\r\n          placeholder=\"Write your country\"\r\n          onKeyDown={onKeyDown}\r\n          autocomplete=\"off\"\r\n\r\n        />\r\n\r\n        {suggestionsListComponent}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AutoComplete;\r\n","import React, { useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst AccordionSection = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\nconst AccordionItem = styled.button`\r\n  background-color: ${({ setActive }) =>\r\n    setActive === \"active\" ? \"#27ae60\" : \"#2ecc71\"};\r\n  color: #ecf0f1;\r\n  cursor: pointer;\r\n  padding: 18px;\r\n  display: flex;\r\n  align-items: center;\r\n  border:0;\r\n  border-bottom:1px solid white;\r\n  outline: none;\r\n  transform: translateX(\r\n    ${({ setActive }) => (setActive === \"active\" ? \"20px\" : \"0\")}\r\n  );\r\n  transition: background-color 0.4s ease, transform 0.3s;\r\n  &:hover {\r\n    background-color: #1abc9c;\r\n  }\r\n  \r\n`;\r\nconst AccordionTitle = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 600;\r\n  font-size: 1.7rem;\r\n`;\r\nconst AccordionContent = styled.div`\r\n  background-color: white;\r\n  overflow: hidden;\r\n  transition: max-height 0.6s ease;\r\n  \r\n`;\r\nconst AccordionContentText = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  padding: 18px;\r\n  margin-left:20px;\r\n`;\r\n\r\nfunction Accordion(props) {\r\n  const [setActive, setActiveState] = useState(\"\");\r\n  const [setHeight, setHeightState] = useState(\"0px\");\r\n\r\n  const content = useRef(null);\r\n\r\n  function toggleAccordion() {\r\n    setActiveState(setActive === \"\" ? \"active\" : \"\");\r\n    setHeightState(\r\n      setActive === \"active\" ? \"0px\" : `${content.current.scrollHeight}px`\r\n    );\r\n  }\r\n\r\n  \r\n  return (\r\n    <AccordionSection>\r\n      <AccordionItem onClick={toggleAccordion} setActive={setActive}>\r\n        <AccordionTitle>{props.title}</AccordionTitle>\r\n      </AccordionItem>\r\n      <AccordionContent ref={content} style={{ maxHeight: `${setHeight}` }}>\r\n        <AccordionContentText> {props.content}</AccordionContentText>\r\n      </AccordionContent>\r\n    </AccordionSection>\r\n  );\r\n}\r\nAccordion.propTypes ={\r\n  title:PropTypes.string.isRequired,\r\n  content:PropTypes.string.isRequired,\r\n}\r\nAccordion.defaultProps = {\r\n  title: \"\",\r\n  content:\"\",\r\n};\r\n\r\nexport default Accordion;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600,500');\r\n  \r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport AutoComplete from \"./Components/AutoComplete/AutoComplete\";\nimport Accordion from \"Components/Accordion/Accordion\";\nimport GlobalStyle from \"theme/GlobalStyle\";\n\nconst cors = \"https://cors-anywhere.herokuapp.com/\";\nconst cityApi =\n  \"https://api.openaq.org/v1/measurements?limit=200&parameter=pm25&order_by=value&sort=desc&country=\";\n\nconst countrySuggestion = {\n  Spain: \"ES\",\n  Poland: \"PL\",\n  Germany: \"DE\",\n  France: \"FR\"\n};\nconst StyledWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nconst StyledInnerWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-end;\n \n`;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getInputData = this.getInputData.bind(this);\n  }\n  state = {\n    cities: [],\n    country: \"\"\n  };\n\n  filterCities(array) {\n    let unique = [...new Set(array.map(item => item.city.split(\"/\")[0]))].slice(\n      0,\n      10\n    );\n\n    this.setState(\n      {\n        cities: unique\n      },\n      () => this.getWikiData(this.state)\n    );\n  }\n\n  getInputData(state) {\n    this.setState(\n      {\n        country: state\n      },\n      () => this.getData()\n    );\n  }\n\n  async getData() {\n    await fetch(cityApi + countrySuggestion[this.state.country])\n      .then(res => res.json())\n      .then(json => this.filterCities(json.results))\n      .catch(error => console.error(\"Error:\", error));\n  }\n  async getWikiData(state) {\n    const desc = state.cities.map(async item => {\n      return fetch(\n        `${cors}https://en.wikipedia.org/api/rest_v1/page/summary/${item}`\n      )\n        .then(res => res.json())\n        .then(res => res.extract)\n        .catch(error => console.error(\"Error:\", error));\n    });\n\n    Promise.all(desc).then(res =>\n      this.setState({\n        desc: res\n      })\n    );\n  }\n\n  render() {\n    const Cities = this.state.cities;\n    return (\n      <>\n        <GlobalStyle />\n        <StyledWrapper>\n          <StyledInnerWrapper>\n            <AutoComplete\n              suggestions={[\"Spain\", \"Poland\", \"Germany\", \"France\"]}\n              afterSubmit={this.getInputData}\n            />\n          </StyledInnerWrapper>\n          <StyledInnerWrapper>\n            {this.state.desc\n              ? Cities.map((item, index) => (\n                  <Accordion\n                    title={item}\n                    content={this.state.desc[index]}\n                    key={index}\n                  />\n                ))\n              : null}\n          </StyledInnerWrapper>\n        </StyledWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}